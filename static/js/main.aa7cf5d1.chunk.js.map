{"version":3,"sources":["Box.js","OrientationLine.js","Skyline.js","App.js","index.js"],"names":["Box","item","factorX","factorY","connectToLastItem","startNewItem","removeItem","svgHeight","useState","editDialogOpen","setEditDialogOpen","color","setColor","label","setLabel","handleClose","x","position","y","width","duration","height","style","fill","strokeWidth","selected","stroke","onClick","e","altKey","shiftKey","textAnchor","transform","transformOrigin","Dialog","open","onClose","DialogTitle","DialogContent","TextField","size","value","onChange","target","autoFocus","DialogActions","Button","OrientationLine","ceiledMaxDuration","className","x1","y1","x2","y2","strokeDasharray","diff","instantsToUnify","acc","currentInstant","index","array","nextInstant","currVal","parseFloat","data","nextVal","isNaN","Skyline","upbeat","levels","connectedItems","setConnectedItems","lastItem","at","Math","min","prev","slice","newItem","durationLevels","map","level","reduce","current","level1","indexOf","upbeats","push","maxDuration","max","val","ceil","svgWidth","bottom","i","filter","el","reverse","durations","App","csv","setCSV","setUpbeat","setLevels","setFactorX","setFactorY","showHelp","setShowHelp","buttonRef","React","createRef","levelsRef","handleOpenDialog","handleRemoveFile","removeFile","ref","onFileLoad","onError","err","file","inputElem","reason","console","warn","onRemoveFile","variant","name","Tooltip","title","IconButton","type","parseInt","placeholder","inputRef","newLevels","split","l","log","Drawer","anchor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wWAyFeA,EA9EH,SAAC,GAQN,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,QACAC,EAKI,EALJA,QACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,UAEA,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,mBAAS,aAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAc,kBAAML,GAAkB,IAE5C,OACE,qCACE,sBACEM,EAAGf,EAAKgB,SAAWf,EACnBgB,EAAG,EACHC,MAAOlB,EAAKmB,SAAWlB,EACvBmB,OAAQpB,EAAKmB,SAAWjB,EACxBmB,MAAO,CACLC,KAAMZ,EACNa,YAAavB,EAAKwB,SAAW,IAAM,IACnCC,OAAQ,SAEVC,QAAS,SAACC,GACJA,EAAEC,QAAUD,EAAEE,SAChBxB,IAIEsB,EAAEC,OACJnB,GAAkB,GAIhBkB,EAAEE,SAAU1B,EAAkBH,GAC7BI,EAAaJ,MAItB,sBACEe,EAAGd,GAAWD,EAAKmB,SAAW,EAAInB,EAAKgB,UACvCC,EAAGX,EAAYN,EAAKmB,SAAWjB,EAAU,EACzC4B,WAAW,SACXT,MAAO,CACLU,UAAW,eACXC,gBAAiB,UANrB,SASGpB,IAGH,eAACqB,EAAA,EAAD,CAAQC,KAAM1B,EAAgB2B,QAASrB,EAAvC,UACE,cAACsB,EAAA,EAAD,uBAEA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACE1B,MAAM,QACN2B,KAAK,QACLC,MAAO5B,EACP6B,SAAU,SAACd,GAAD,OAAOd,EAASc,EAAEe,OAAOF,QACnCG,WAAS,IAGX,cAAC,IAAD,CAAgBjC,MAAOA,EAAO+B,SAAU9B,OAG1C,cAACiC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQnB,QAASZ,EAAjB,4BCtDKgC,EA1BS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,kBAAmB9B,EAAe,EAAfA,EAAGC,EAAY,EAAZA,MAC/C,OACE,qCACE,sBACE8B,UAAU,kBACVC,GAAI,EACJC,GAAIjC,EACJkC,GAAIjC,EACJkC,GAAInC,EACJQ,OAAO,QACP4B,gBAAgB,MAElB,uBACEtC,EAAG,EACHE,EAAG,GACHI,MAAO,CACLU,UAAW,eACXC,gBAAiB,UALrB,UAQGe,EARH,WCVAO,EAAO,SAACC,GACZ,OAAO,SAACC,EAAKC,EAAgBC,EAAOC,GAClC,IAAMC,EAAcD,EAAMD,EAAQH,GAElC,GAAIG,EAAQH,IAAoB,IAAMK,EACpC,OAAOJ,EAGT,IAAMK,EAAUC,WAAWL,EAAeM,KAAK,IACzCC,EAAUF,WAAWF,EAAYG,KAAK,IAE5C,GAAIE,MAAMJ,GAAU,OAAOL,EAE3B,IAAMrC,EAAW,CACfH,SAAU6C,EACV1C,SAAU6C,EAAUH,EACpBjD,MAAO6C,EAAeM,KAAK,GAC3BvC,UAAU,GAGZ,MAAM,GAAN,mBAAWgC,GAAX,CAAgBrC,MAiHL+C,EA7GC,SAAC,GAAgD,IAA9CH,EAA6C,EAA7CA,KAAMI,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAAQnE,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAChD,EAA4CK,mBAAS,IAArD,mBAAO8D,EAAP,KAAuBC,EAAvB,KAEMnE,EAAoB,SAACH,GACzB,IAAIuE,EAAWF,EAAeG,IAAI,GAClCD,EAASpD,UAAYnB,EAAKmB,SAC1BoD,EAASvD,SAAWyD,KAAKC,IAAIH,EAASvD,SAAUhB,EAAKgB,UAErDsD,GAAkB,SAACK,GACjB,MAAM,GAAN,mBAAWA,EAAKC,MAAM,GAAI,IAA1B,CAA8BL,QAI5BnE,EAAe,SAACJ,GACpB,IAAM6E,EAAO,2BAAQ7E,GAAR,IAAcwB,UAAU,IAE/B+C,EAAWF,EAAeG,IAAI,GAChCD,GACFA,EAAS/C,UAAW,EACpB8C,GAAkB,SAACK,GAAD,4BAAcA,EAAKC,MAAM,GAAI,IAA7B,CAAiCL,EAAUM,QAE7DP,GAAkB,SAACK,GAAD,4BAAcA,GAAd,CAAoBE,QAI1C,IAAKd,EACH,OAAO,KAGT,IAAMe,EAAiBV,EACpBW,KAAI,SAACC,GAAD,OAAWjB,EAAKa,MAAMT,GAAQc,OAAO3B,EAAK0B,GAAQ,OACtDC,QAAO,SAACzB,EAAK0B,GAAN,4BAAsB1B,GAAtB,CAA2B0B,MAAU,IAEzCC,EAASL,EAAeV,EAAOgB,QAAQ,IAC7C,GAAID,EAAQ,CACV,IAAME,EAAUtB,EAAKa,MAAM,EAAET,EAAS,GAAGc,OAAO3B,EAAK,GAAI,IACzD6B,EAAOG,KAAP,MAAAH,EAAM,YAASE,IAGjB,IAAME,EAAcd,KAAKe,IAAL,MAAAf,KAAI,sBAEjBV,EAAKkB,OAAO3B,EAAKmB,KAAKe,IAAL,MAAAf,KAAI,YAAQL,KAAU,IAAIW,KAAI,SAACU,GAAD,OAASA,EAAItE,aAF3C,YAGjBkD,EAAeU,KAAI,SAAC/E,GAAD,OAAUA,EAAKmB,eAInC4B,EAAkD,GAA9B0B,KAAKiB,KAAKH,EAAc,IAC5CjF,EAAYyC,EAAoB7C,EAAU,GAG1CyF,EAAW5B,EAAKS,IAAI,GAAGT,KAAK,GAAK9D,EAEvC,OACE,sBACEiB,MAAOyE,EACPvE,OAAQd,EACRe,MAAO,CACLuE,OAAQ,OACR5E,SAAU,WACVe,UAAW,eACXC,gBAAiB,UAPrB,UAUE,mBAAGgB,UAAS,iBAAZ,SACGqB,EAAeU,KAAI,SAAC/E,EAAM6F,GAAP,OAClB,cAAC,EAAD,CAEE7F,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,kBAAmBA,EACnBC,aAAcA,EACdC,WAAY,WACViE,EAAkBD,EAAeyB,QAAO,SAAAC,GAAE,OAAIA,IAAO/F,OAEvDM,UAAWA,GAVb,uBACuBuF,SAc1Bf,GACCA,EAAekB,UAAUjB,KAAI,SAACkB,EAAWjB,GAAZ,OAC3B,mBAA6BhC,UAAS,eAAUgC,GAAhD,SACGiB,EAAUlB,KAAI,SAAC/E,EAAM6F,GAAP,OACb,cAAC,EAAD,CAEE7F,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,kBAAmBA,EACnBC,aAAcA,EACdC,WAAY,WACViE,EAAkBD,EAAeyB,QAAO,SAAAC,GAAE,OAAKA,EAAG/E,WAAahB,EAAKgB,UAAc+E,EAAG5E,WAAanB,EAAKmB,cAEzGb,UAAWA,GAVb,aACauF,QAHjB,mBAAoBb,OAkBxB,cAAC,EAAD,CACEjC,kBAAmBA,EACnB9B,EAAG8B,EAAoB7C,EACvBgB,MAAOyE,QC0CAO,G,OA/JH,WACV,MAAsB3F,mBAAS,MAA/B,mBAAO4F,EAAP,KAAYC,EAAZ,KACA,EAA4B7F,mBAAS,GAArC,mBAAO4D,EAAP,KAAekC,EAAf,KACA,EAA4B9F,mBAAS,IAArC,mBAAO6D,EAAP,KAAekC,EAAf,KACA,EAA8B/F,mBAAS,GAAvC,mBAAON,EAAP,KAAgBsG,EAAhB,KACA,EAA8BhG,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBsG,EAAhB,KACA,EAAgCjG,oBAAS,GAAzC,mBAAOkG,EAAP,KAAiBC,EAAjB,KACMC,EAAYC,IAAMC,YAClBC,EAAYF,IAAMC,YAElBE,EAAmB,SAACpF,GACpBgF,EAAUzB,SACZyB,EAAUzB,QAAQhD,KAAKP,IAMrBqF,EAAmB,SAACrF,GACpBgF,EAAUzB,UACZyB,EAAUzB,QAAQ+B,WAAWtF,GAC7ByE,EAAO,QAqBX,OACE,gCACE,qBAAKpD,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAACH,EAAA,EAAD,CAAQnB,QAAS,kBAAMgF,GAAY,IAAnC,yBACA,cAAC,IAAD,CACEQ,IAAKP,EACLQ,WAAYf,EACZgB,QAlCY,SAACC,EAAKC,EAAMC,EAAWC,GAAvB,OAAkCC,QAAQC,KAAKL,IAmC3DM,aAAc,WACZvB,EAAO,KALX,SAQG,gBAAGkB,EAAH,EAAGA,KAAH,OACC,sBAAKtE,UAAU,SAAf,UACE,cAACH,EAAA,EAAD,CACEN,KAAK,QACLqF,QAAQ,YACRlG,QAASqF,EAHX,2BAOCO,GACC,qCACE,qBAAKtE,UAAU,WAAf,SAA2BsE,GAAQA,EAAKO,OACxC,cAACC,EAAA,EAAD,CAASC,MAAM,SAAf,SACE,cAACC,EAAA,EAAD,CAAYtG,QAASsF,EAArB,SACE,cAAC,IAAD,iBASd,cAAC1E,EAAA,EAAD,CACEC,KAAK,QACL3B,MAAM,gBACNqH,KAAK,SACLzF,MAAO2B,EACP1B,SAAU,SAACd,GAAD,OAAO0E,EAAU6B,SAASvG,EAAEe,OAAOF,MAAO,QAGtD,cAACF,EAAA,EAAD,CACEC,KAAK,QACL3B,MAAM,SACNuH,YAAY,eACZC,SAAUtB,EACVrE,SAlEW,WACnB,GAAKqE,EAAU5B,QAAf,CAEA,IAAM1C,EAAQsE,EAAU5B,QAAQ1C,MAChC,GAAKA,EAAL,CAKA,IAAM6F,EAAY7F,EAAM8F,MAAM,KAAKvD,KAAI,SAACC,GACtC,IAAMuD,EAAIL,SAASlD,EAAO,IAC1B,OAAIf,MAAMsE,GAAW,EACdA,KAETjC,EAAU+B,QATRZ,QAAQe,IAAI,0BAgER,cAAClG,EAAA,EAAD,CACEC,KAAK,QACL3B,MAAM,qBACNuH,YAAY,mBACZF,KAAK,SACLzF,MAAOvC,EACPwC,SAAU,SAACd,GAAD,OAAO4E,EAAW2B,SAASvG,EAAEe,OAAOF,MAAO,QAGvD,cAACF,EAAA,EAAD,CACEC,KAAK,QACL3B,MAAM,mBACNuH,YAAY,mBACZ3F,MAAOtC,EACP+H,KAAK,SACLxF,SAAU,SAACd,GAAD,OAAO6E,EAAW0B,SAASvG,EAAEe,OAAOF,MAAO,aAI3D,cAAC,EAAD,CAASuB,KAAMoC,EAAKhC,OAAQA,EAAQC,OAAQA,EAAQnE,QAASA,EAASC,QAASA,IAC/E,eAACuI,EAAA,EAAD,CACEzF,UAAU,OACV0F,OAAO,QACPxG,KAAMuE,EACNtE,QAAS,kBAAMuE,GAAY,IAJ7B,UAME,qHAIA,qQAI0B,sCAJ1B,uMASA,gIAIA,qMAG8B,wCAH9B,0FAMA,iFACkD,wCADlD,QACuE,sCADvE,0DAIA,6FAC8D,sCAD9D,2HAKA,yCACA,4CClKFiC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.aa7cf5d1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField\n} from \"@mui/material\";\nimport { HexColorPicker } from \"react-colorful\";\n\nconst Box = ({\n  item,\n  factorX,\n  factorY,\n  connectToLastItem,\n  startNewItem,\n  removeItem,\n  svgHeight\n}) => {\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [color, setColor] = useState(\"#0000004d\");\n  const [label, setLabel] = useState(\"\");\n\n  const handleClose = () => setEditDialogOpen(false);\n\n  return (\n    <>\n      <rect\n        x={item.position * factorX}\n        y={0}\n        width={item.duration * factorX}\n        height={item.duration * factorY}\n        style={{\n          fill: color,\n          strokeWidth: item.selected ? \"2\" : \"1\",\n          stroke: \"black\"\n        }}\n        onClick={(e) => {\n          if (e.altKey && e.shiftKey) {\n            removeItem()\n            return;\n          }\n\n          if (e.altKey) {\n            setEditDialogOpen(true);\n            return;\n          }\n\n          if (e.shiftKey) connectToLastItem(item);\n          else startNewItem(item);\n        }}\n      />\n\n      <text\n        x={factorX * (item.duration / 2 + item.position)}\n        y={svgHeight - item.duration * factorY - 5}\n        textAnchor=\"middle\"\n        style={{\n          transform: \"scale(1, -1)\",\n          transformOrigin: \"center\"\n        }}\n      >\n        {label}\n      </text>\n\n      <Dialog open={editDialogOpen} onClose={handleClose}>\n        <DialogTitle>Edit Box</DialogTitle>\n\n        <DialogContent>\n          <TextField\n            label=\"Label\"\n            size=\"small\"\n            value={label}\n            onChange={(e) => setLabel(e.target.value)}\n            autoFocus\n          />\n\n          <HexColorPicker color={color} onChange={setColor} />\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\n\nconst OrientationLine = ({ ceiledMaxDuration, y, width }) => {\n  return (\n    <>\n      <line\n        className=\"orientationLine\"\n        x1={0.0}\n        y1={y}\n        x2={width}\n        y2={y}\n        stroke=\"black\"\n        strokeDasharray=\"4\"\n      />\n      <text\n        x={0.0}\n        y={40}\n        style={{\n          transform: \"scale(1, -1)\",\n          transformOrigin: \"center\"\n        }}\n      >\n        {ceiledMaxDuration}s\n      </text>\n    </>\n  );\n};\n\nexport default OrientationLine;\n","import React, { useState } from \"react\";\nimport Box from \"./Box\";\nimport OrientationLine from \"./OrientationLine\";\n\nconst diff = (instantsToUnify) => {\n  return (acc, currentInstant, index, array) => {\n    const nextInstant = array[index + instantsToUnify];\n\n    if (index % instantsToUnify !== 0 || !nextInstant) {\n      return acc;\n    }\n\n    const currVal = parseFloat(currentInstant.data[0]);\n    const nextVal = parseFloat(nextInstant.data[0]);\n\n    if (isNaN(currVal)) return acc;\n\n    const duration = {\n      position: currVal,\n      duration: nextVal - currVal,\n      label: currentInstant.data[1],\n      selected: false\n    };\n\n    return [...acc, duration];\n  };\n};\n\nconst Skyline = ({ data, upbeat, levels, factorX, factorY }) => {\n  const [connectedItems, setConnectedItems] = useState([]);\n\n  const connectToLastItem = (item) => {\n    let lastItem = connectedItems.at(-1);\n    lastItem.duration += item.duration;\n    lastItem.position = Math.min(lastItem.position, item.position);\n\n    setConnectedItems((prev) => {\n      return [...prev.slice(0, -1), lastItem];\n    });\n  };\n\n  const startNewItem = (item) => {\n    const newItem = { ...item, selected: true };\n\n    const lastItem = connectedItems.at(-1);\n    if (lastItem) {\n      lastItem.selected = false;\n      setConnectedItems((prev) => [...prev.slice(0, -1), lastItem, newItem]);\n    } else {\n      setConnectedItems((prev) => [...prev, newItem]);\n    }\n  };\n\n  if (!data) {\n    return null;\n  }\n\n  const durationLevels = levels\n    .map((level) => data.slice(upbeat).reduce(diff(level), []))\n    .reduce((acc, current) => [...acc, current], []);\n  \n  const level1 = durationLevels[levels.indexOf(1)]\n  if (level1) {\n    const upbeats = data.slice(0,upbeat + 1).reduce(diff(1), [])\n    level1.push(...upbeats)\n  }\n\n  const maxDuration = Math.max(\n    ...[\n      ...data.reduce(diff(Math.max(...levels)), []).map((val) => val.duration),\n      ...connectedItems.map((item) => item.duration)\n    ]\n  );\n\n  const ceiledMaxDuration = Math.ceil(maxDuration / 10) * 10;\n  const svgHeight = ceiledMaxDuration * factorY + 50;\n\n  // take last time instant as a reference for the SVG width\n  const svgWidth = data.at(-1).data[0] * factorX;\n\n  return (\n    <svg\n      width={svgWidth}\n      height={svgHeight}\n      style={{\n        bottom: \"1rem\",\n        position: \"absolute\",\n        transform: \"scale(1, -1)\",\n        transformOrigin: \"center\"\n      }}\n    >\n      <g className={`connectedItems`}>\n        {connectedItems.map((item, i) => (\n          <Box\n            key={`connectedItem${i}`}\n            item={item}\n            factorX={factorX}\n            factorY={factorY}\n            connectToLastItem={connectToLastItem}\n            startNewItem={startNewItem}\n            removeItem={() => {\n              setConnectedItems(connectedItems.filter(el => el !== item))\n            }}\n            svgHeight={svgHeight}\n          />\n        ))}\n      </g>\n\n      {durationLevels &&\n        durationLevels.reverse().map((durations, level) => (\n          <g key={`durations${level}`} className={`level${level}`}>\n            {durations.map((item, i) => (\n              <Box\n                key={`box${i}`}\n                item={item}\n                factorX={factorX}\n                factorY={factorY}\n                connectToLastItem={connectToLastItem}\n                startNewItem={startNewItem}\n                removeItem={() => {\n                  setConnectedItems(connectedItems.filter(el => (el.position !== item.position) && (el.duration !== item.duration)))\n                }}\n                svgHeight={svgHeight}\n              />\n            ))}\n          </g>\n        ))}\n\n      <OrientationLine\n        ceiledMaxDuration={ceiledMaxDuration}\n        y={ceiledMaxDuration * factorY}\n        width={svgWidth}\n      />\n    </svg>\n  );\n};\n\nexport default Skyline;\n","import React, { useState } from \"react\";\nimport {\n  Drawer,\n  Box,\n  Button,\n  Tooltip,\n  IconButton,\n  TextField\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { CSVReader } from \"react-papaparse\";\nimport Skyline from \"./Skyline\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [csv, setCSV] = useState(null);\n  const [upbeat, setUpbeat] = useState(0);\n  const [levels, setLevels] = useState([]);\n  const [factorX, setFactorX] = useState(1);\n  const [factorY, setFactorY] = useState(5);\n  const [showHelp, setShowHelp] = useState(false);\n  const buttonRef = React.createRef();\n  const levelsRef = React.createRef();\n\n  const handleOpenDialog = (e) => {\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => console.warn(err);\n\n  const handleRemoveFile = (e) => {\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n      setCSV(null);\n    }\n  };\n\n  const handleLevels = () => {\n    if (!levelsRef.current) return;\n\n    const value = levelsRef.current.value;\n    if (!value) {\n      console.log(\"no level specified\");\n      return;\n    }\n\n    const newLevels = value.split(\",\").map((level) => {\n      const l = parseInt(level, 10);\n      if (isNaN(l)) return 0;\n      return l;\n    });\n    setLevels(newLevels);\n  };\n\n  return (\n    <div>\n      <div className=\"options\">\n        <Box>\n          <Button onClick={() => setShowHelp(true)}>How to use?</Button>\n          <CSVReader\n            ref={buttonRef}\n            onFileLoad={setCSV}\n            onError={handleOnError}\n            onRemoveFile={() => {\n              setCSV([]);\n            }}\n          >\n            {({ file }) => (\n              <div className=\"import\">\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleOpenDialog}\n                >\n                  open CSV file\n                </Button>\n                {file && (\n                  <>\n                    <div className=\"filename\">{file && file.name}</div>\n                    <Tooltip title=\"Delete\">\n                      <IconButton onClick={handleRemoveFile}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </>\n                )}\n              </div>\n            )}\n          </CSVReader>\n\n          <TextField\n            size=\"small\"\n            label=\"Upbeat length\"\n            type=\"number\"\n            value={upbeat}\n            onChange={(e) => setUpbeat(parseInt(e.target.value, 10))}\n          />\n\n          <TextField\n            size=\"small\"\n            label=\"Levels\"\n            placeholder=\"e.g. 1, 3, 6\"\n            inputRef={levelsRef}\n            onChange={handleLevels}\n          />\n\n          <TextField\n            size=\"small\"\n            label=\"Horizontal stretch\"\n            placeholder=\"must be a number\"\n            type=\"number\"\n            value={factorX}\n            onChange={(e) => setFactorX(parseInt(e.target.value, 10))}\n          />\n\n          <TextField\n            size=\"small\"\n            label=\"Vertical stretch\"\n            placeholder=\"must be a number\"\n            value={factorY}\n            type=\"number\"\n            onChange={(e) => setFactorY(parseInt(e.target.value, 10))}\n          />\n        </Box>\n      </div>\n      <Skyline data={csv} upbeat={upbeat} levels={levels} factorX={factorX} factorY={factorY} />\n      <Drawer\n        className=\"help\"\n        anchor=\"right\"\n        open={showHelp}\n        onClose={() => setShowHelp(false)}\n      >\n        <p>\n          This tool takes time instants exported as a CSV file from Sonic\n          Visualiser as input.\n        </p>\n        <p>\n          In the \"levels\" field you can specify, how the different metrical\n          layers are combined. When putting \"1\", only the lowest metrical unit\n          is displayed, meaning that every time instant is displayed as a box.\n          When putting \"3\", every <i>third</i> instant is taken into account,\n          meaning that the boxes combine three metrical units. When putting\n          \"1,3\", both metrical layers are being displayed. You can specify an\n          arbitrary amount of layers.\n        </p>\n        <p>\n          Upbeat measures can be specified by defining the number of instants \n          that are part of an upbeat.\n        </p>\n        <p>\n          In case you want to combine two boxes outside a regular scheme that\n          applies for the whole piece, you can do so be clicking on the first\n          first box, then keeping the <kbd>shift</kbd> key down and clicking on an adjecent\n          box. A new box will appear that includes both.\n        </p>\n        <p>\n          In order to delete wrongly combined boxes, hold <kbd>shift</kbd> and <kbd>alt</kbd> at \n          the same time and click on the box to be delted.\n        </p>\n        <p>\n          In order to change the visual appearence of a box, hold the <kbd>alt</kbd> key and \n          click on the box you want to edit. Here you can add a label text and change \n          color and transparency of a box.\n        </p>\n        <h2>Example</h2>\n        <p>...</p>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}